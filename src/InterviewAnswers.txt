Difference between a Queue and a Topic ?
	Topics
	In JMS Topic implements publish and subscribe semantics. When you publish a message it goes to all the subscribers who are 
	interested - so zero to many subscribers will receive a copy of the message. Only subscribers who had an active subscription 
	at the time the broker receives the message will get a copy of the message.
	Queues
	A JMS Queue implements load balancer semantics. A single message will be received by exactly one consumer. If there are no 
	consumers available at the time the message is sent it will be kept until a consumer is available that can process the message. 
	If a consumer receives a message and does not acknowledge it before closing then the message will be re-delivered to another 
	consumer. A queue can have many consumers with messages load balanced across the available consumers.
	
	Topics are for the publisher-subscriber model, while queues are for point-to-point model.

JSON representation of a employee object with a manager object and manager having list of employees as reporters ?
	employee - {"name":"employee1","manager":{"name":"manager","manager":{"name":"director","manager":null,"dept":"ALL"},"dept":"ECS"}}
	manager - {"name":"manager","manager":{"name":"director","manager":null,"dept":"ALL"},"dept":"ECS"}
	managerReporters - {"manager":{"name":"manager","manager":{"name":"director","manager":null,"dept":"ALL"},"dept":"ECS"},"reporters":[{"name":"employee1","manager":{"name":"manager","manager":{"name":"director","manager":null,"dept":"ALL"},"dept":"ECS"}},{"name":"employee2","manager":{"name":"manager","manager":{"name":"director","manager":null,"dept":"ALL"},"dept":"ECS"}}]}

Difference between java serialization and JSON string generation ?
	Java serialization mandates on the class to implement the marker Serializable interface, where as json serialization doesn't put any such constraints.
	Java serialization serializes to non-human readable format, where as json serialization serializes into human readable string format.
	Java serialization is much slower as compared to Json serialization.
	
Differnce between JAX-WS and JAX-RS?
	JAX-WS
	Java API for the XML-Based Web Services - a standard way to develop a Web- Services in SOAP notation (Simple Object Access Protocol).
	Calling of the Web Services is performed via remote procedure calls. For the exchange of information between the client and the Web Service is used SOAP protocol. Message exchange between the client and the server performed through XML- based SOAP messages.
	Clients of the JAX-WS Web- Service need a WSDL file to generate executable code that the clients can use to call Web- Service.
	JAX-RS 
	Java API for RESTful Web Services. RESTful Web Services are represented as resources and can be identified by Uniform Resource Identifiers (URI). 
	Remote procedure call in this case is represented a HTTP- request and the necessary data is passed as parameters of the query. 
	Web Services RESTful - more flexible, can use several different MIME- types. Typically used for XML data exchange or JSON (JavaScript Object Notation) data exchange.
	


SQL query to find first 5 employee based on highest salary?
	SELECT * FROM employee e1 WHERE (SELECT COUNT(*) FROM employee e2 WHERE e1.salary < e2.salary) < 5 ORDER BY e1.salary DESC;
	
